/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import Logic.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author zainab
 */
public class AddEmployeeForm extends javax.swing.JFrame {
    MainWindow main;
           ArrayList<Department> departments = main.departments;
       ArrayList<Employee> allEmployees = main.allEmployees;
    /**
     * Creates new form AddEmployeeForm
     */
    public AddEmployeeForm() {
        initComponents(); 
    }
    public AddEmployeeForm(MainWindow main) {
        initComponents();
setDefaultCloseOperation(DISPOSE_ON_CLOSE);
       this.main = main;

                        
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        
                this.setLocation(x, y);

            // When the form is disposed, make the main window visible again
    addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosed(java.awt.event.WindowEvent evt) {
            main.setVisible(true);
        }
    });
        
        // populate combo box
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement(null); // Default option

        for (Department dept : departments) {
            model.addElement(dept.getName());
        }

        departmentForEmployeeCombo1.setModel(model);
        
        // populate pay level
        payLevelForEmployeeCombo1.removeAllItems();
        payLevelForEmployeeCombo1.addItem("Select Annual Salary");
        payLevelForEmployeeCombo1.addItem("Level 1 - BHD 44,245.75");
        payLevelForEmployeeCombo1.addItem("Level 2 - BHD 48,670.32");
        payLevelForEmployeeCombo1.addItem("Level 3 - BHD 53,537.35");
        payLevelForEmployeeCombo1.addItem("Level 4 - BHD 58,891.09");
        payLevelForEmployeeCombo1.addItem("Level 5 - BHD 64,780.20");
        payLevelForEmployeeCombo1.addItem("Level 6 - BHD 71,258.22");
        payLevelForEmployeeCombo1.addItem("Level 7 - BHD 80,946.95");
        payLevelForEmployeeCombo1.addItem("Level 8 - BHD 96,336.34");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        jLabel22 = new javax.swing.JLabel();
        departmentForEmployeeCombo1 = new javax.swing.JComboBox<>();
        cancelEmployeeFormButton = new javax.swing.JButton();
        maleButton1 = new javax.swing.JRadioButton();
        firstNameField1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        addressField1 = new javax.swing.JTextArea();
        jLabel25 = new javax.swing.JLabel();
        lastNameField1 = new javax.swing.JTextField();
        femaleButton1 = new javax.swing.JRadioButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        payLevelForEmployeeCombo1 = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        addEmployeeConfirmButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel22.setText("First Name");

        departmentForEmployeeCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select department", "Item 2", "Item 3", "Item 4" }));

        cancelEmployeeFormButton.setText("Cancel");
        cancelEmployeeFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelEmployeeFormButtonActionPerformed(evt);
            }
        });

        genderGroup.add(maleButton1);
        maleButton1.setText("Male");
        maleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleButton1ActionPerformed(evt);
            }
        });

        firstNameField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameField1ActionPerformed(evt);
            }
        });

        jLabel24.setText("Last Name");

        addressField1.setColumns(20);
        addressField1.setRows(5);
        jScrollPane3.setViewportView(addressField1);

        jLabel25.setText("Department");

        lastNameField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameField1ActionPerformed(evt);
            }
        });

        genderGroup.add(femaleButton1);
        femaleButton1.setText("Female");

        jLabel26.setText("Gender");

        jLabel19.setText("Pay Level");

        payLevelForEmployeeCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select pay level", "Item 2", "Item 3", "Item 4" }));
        payLevelForEmployeeCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payLevelForEmployeeCombo1ActionPerformed(evt);
            }
        });

        jLabel21.setText("Address");

        addEmployeeConfirmButton1.setText("Add Employee");
        addEmployeeConfirmButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeConfirmButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(cancelEmployeeFormButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addEmployeeConfirmButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(146, 146, 146)
                                .addComponent(jLabel24))
                            .addComponent(jLabel26)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maleButton1)
                                .addGap(18, 18, 18)
                                .addComponent(femaleButton1))
                            .addComponent(jLabel19)
                            .addComponent(jLabel25)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(departmentForEmployeeCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lastNameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(firstNameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(payLevelForEmployeeCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(firstNameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lastNameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel22))
                        .addGap(29, 29, 29)))
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maleButton1)
                    .addComponent(femaleButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departmentForEmployeeCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(payLevelForEmployeeCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelEmployeeFormButton)
                    .addComponent(addEmployeeConfirmButton1))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelEmployeeFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelEmployeeFormButtonActionPerformed
        // TODO add your handling code here:    
    // Show the main window
    main.setVisible(true);

    // Dispose the current form
    dispose();
    }//GEN-LAST:event_cancelEmployeeFormButtonActionPerformed

    private void maleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleButton1ActionPerformed

    private void firstNameField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameField1ActionPerformed

    private void lastNameField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameField1ActionPerformed

    private void addEmployeeConfirmButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeConfirmButton1ActionPerformed
        try {
        // Get values from form fields
        String firstName = firstNameField1.getText().trim();
        String lastName = lastNameField1.getText().trim();
        String address = addressField1.getText().trim();

        // Validate required fields
        if (firstName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "First name is required.", "Input Error", JOptionPane.WARNING_MESSAGE);
            firstNameField1.requestFocus();
            return;
        }

        if (lastName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Last name is required.", "Input Error", JOptionPane.WARNING_MESSAGE);
            lastNameField1.requestFocus();
            return;
        }

        if (address.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Address is required.", "Input Error", JOptionPane.WARNING_MESSAGE);
            addressField1.requestFocus();
            return;
        }

        // Validate gender selection
        char gender;
        if (maleButton1.isSelected()) {
            gender = 'M';
        } else if (femaleButton1.isSelected()) {
            gender = 'F';
        } else {
            JOptionPane.showMessageDialog(this, "Please select a gender.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Get salary from combo box
        String salaryStr = (String) payLevelForEmployeeCombo1.getSelectedItem();
        if (salaryStr == null || salaryStr.equals("Select Annual Salary")) {
            JOptionPane.showMessageDialog(this, "Please select a valid pay level.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int payLevel;
        try {
            // Extract level number (e.g., "Level 1" -> 1)
            payLevel = Integer.parseInt(salaryStr.split(" - ")[0].substring(6));
        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Invalid pay level format.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Get selected department (can be null)
        String selectedDepartmentName = (String) departmentForEmployeeCombo1.getSelectedItem();
        Integer departmentId = null;
        
        if (selectedDepartmentName != null && !selectedDepartmentName.equals("No Department")) {
            try {
                departmentId = Department.getIdByDepartmentName(departments, selectedDepartmentName);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error retrieving department information: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        // Create new employee
        Employee newEmployee;
        if (departmentId == null) {
            newEmployee = new Employee(firstName, lastName, gender, address, payLevel);
        } else {
            newEmployee = new Employee(firstName, lastName, gender, address, payLevel, departmentId);
        }

        // Add to employees list
        main.allEmployees.add(newEmployee);

        // Update employees table
        main.refreshEmployeeTable();

        // Clear form fields
        firstNameField1.setText("");
        lastNameField1.setText("");
        addressField1.setText("");
        payLevelForEmployeeCombo1.setSelectedIndex(0);
        departmentForEmployeeCombo1.setSelectedIndex(0);

        // Show success message
        JOptionPane.showMessageDialog(this, "Employee added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Close the form
        main.setVisible(true);
        this.dispose();

    } catch (NullPointerException e) {
        JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_addEmployeeConfirmButton1ActionPerformed

    private void payLevelForEmployeeCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payLevelForEmployeeCombo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payLevelForEmployeeCombo1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEmployeeForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmployeeConfirmButton1;
    private javax.swing.JTextArea addressField1;
    private javax.swing.JButton cancelEmployeeFormButton;
    private javax.swing.JComboBox<String> departmentForEmployeeCombo1;
    private javax.swing.JRadioButton femaleButton1;
    private javax.swing.JTextField firstNameField1;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lastNameField1;
    private javax.swing.JRadioButton maleButton1;
    private javax.swing.JComboBox<String> payLevelForEmployeeCombo1;
    // End of variables declaration//GEN-END:variables
}
