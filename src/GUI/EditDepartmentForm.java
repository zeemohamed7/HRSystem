/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.Dimension;
import java.awt.Toolkit;
import Logic.*;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author zainab
 */
public class EditDepartmentForm extends javax.swing.JFrame {
    private Department selectedDepartment;
    private MainWindow main;
    ArrayList<Employee> allEmployees = main.allEmployees;
    /**
     * Creates new form EditDepartmentForm
     */
    public EditDepartmentForm() {
    }
    public EditDepartmentForm(MainWindow main, Department dept) {
        initComponents();
                        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
        this.main = main;
        this.selectedDepartment = dept;
        // initialise departments details for edit
        departmentNameField.setText(dept.getName());
        locationField.setText(dept.getLocation());

        // Populate combo box with employees for HEAD field
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement(null); // Add the "No Head" option as the first item

        Employee headEmployee = selectedDepartment.getDepartmentHead();

        // If there is a head, add it as the second option
        if (headEmployee != null) {
            String headName = headEmployee.getFirstName() + " " + headEmployee.getSurname();
            model.addElement(headName);
        }

        // Add the rest of the employees, excluding the current head (to avoid duplicate entry)
        for (Employee emp : allEmployees) {
            String empName = emp.getFirstName() + " " + emp.getSurname();

            // Prevent adding the same employee twice if they are already set as the head
            if (headEmployee == null || !empName.equals(headEmployee.getFirstName() + " " + headEmployee.getSurname())) {
                model.addElement(empName);
            }
        }

        // Apply the model to the combo box
        departmentHeadSelect.setModel(model);

        // Set the initially selected item
        if (headEmployee != null) {
            departmentHeadSelect.setSelectedItem(headEmployee.getFirstName() + " " + headEmployee.getSurname());
        } else {
            departmentHeadSelect.setSelectedIndex(0); // Default to "No Head"
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        departmentNameField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        locationField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        departmentHeadSelect = new javax.swing.JComboBox<>();
        cancelButton2 = new javax.swing.JButton();
        editDepartmentSaveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("Department Name");

        departmentNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentNameFieldActionPerformed(evt);
            }
        });

        jLabel10.setText("Location");

        locationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationFieldActionPerformed(evt);
            }
        });

        jLabel15.setText("Department Head");

        departmentHeadSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select department head", "Item 2", "Item 3", "Item 4" }));
        departmentHeadSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentHeadSelectActionPerformed(evt);
            }
        });

        cancelButton2.setText("Cancel");
        cancelButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton2ActionPerformed(evt);
            }
        });

        editDepartmentSaveButton.setText("Save Changes");
        editDepartmentSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDepartmentSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editDepartmentSaveButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel9)
                        .addComponent(departmentNameField)
                        .addComponent(jLabel10)
                        .addComponent(locationField, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addComponent(departmentHeadSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departmentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departmentHeadSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton2)
                    .addComponent(editDepartmentSaveButton))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void departmentNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentNameFieldActionPerformed

    private void locationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationFieldActionPerformed

    private void cancelButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelButton2ActionPerformed

    private void editDepartmentSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDepartmentSaveButtonActionPerformed
        // TODO add your handling code here:
// Get the department name, location, and selected head
String departmentName = departmentNameField.getText();
String location = locationField.getText();
String headName = (String) departmentHeadSelect.getSelectedItem(); 

if (departmentName.isEmpty() || location.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please fill in all fields.");
    return;
}

Employee departmentHead = null;
Employee previousHead = selectedDepartment.getDepartmentHead(); 

// Determine the new head
if (headName != null && !headName.equals("No Head")) {
    for (Employee emp : allEmployees) {
        if (headName.equals(emp.getFirstName() + " " + emp.getSurname())) {
            
            // Check if the employee is already a head of another department
            if (emp.isIsHead() && (previousHead == null || !previousHead.equals(emp))) {
                JOptionPane.showMessageDialog(this, 
                    "The selected employee is already a head of another department.", 
                    "Invalid Head Assignment", 
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            // Check if the employee is part of the current department
            if (emp.getDeptID() == null || emp.getDeptID() != selectedDepartment.getDeptID()) {
                JOptionPane.showMessageDialog(this, 
                    "The selected employee is not part of this department and cannot be assigned as the head.", 
                    "Invalid Head Assignment", 
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            departmentHead = emp;
            break;
        }
    }
}

// Update the selected department
if (selectedDepartment != null) {
    selectedDepartment.setName(departmentName);
    selectedDepartment.setLocation(location);
    selectedDepartment.setDepartmentHead(departmentHead);

    // Update the department in the list
    for (int i = 0; i < main.departments.size(); i++) {
        if (main.departments.get(i).getDeptID() == selectedDepartment.getDeptID()) {
            main.departments.set(i, selectedDepartment);
            break;
        }
    }

    // Handle the isHead property
    if (previousHead != null && !previousHead.equals(departmentHead)) {
        previousHead.setIsHead(false); 
    }

    if (departmentHead != null) {
        departmentHead.setIsHead(true); 
    }

    // Update UI
    main.updateDepartmentDetails(selectedDepartment);
    main.refreshDepartmentTable();
    main.refreshEmployeeTable();
}

this.dispose();



    }//GEN-LAST:event_editDepartmentSaveButtonActionPerformed

    private void departmentHeadSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentHeadSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentHeadSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditDepartmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditDepartmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditDepartmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditDepartmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditDepartmentForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton2;
    private javax.swing.JComboBox<String> departmentHeadSelect;
    private javax.swing.JTextField departmentNameField;
    private javax.swing.JButton editDepartmentSaveButton;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField locationField;
    // End of variables declaration//GEN-END:variables
}
